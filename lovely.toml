# manifest
[manifest]
version = "0.1.0"
dump_lua = true
priority = 0

#for calculating cardareas
[[patches]]
[patches.pattern]
target = '=[SMODS _ "src/utils.lua"]'
pattern = "-- TARGET: add your own CardAreas for joker evaluation"
position = 'before'
match_indent = true
payload = '''
table.insert(t, G.domain)
'''

[[patches]]
[patches.pattern]
target = '=[SMODS _ "src/utils.lua"]'
pattern = "-- TARGET: add your own CardAreas for joker evaluation"
position = 'before'
match_indent = true
payload = '''
table.insert(t, G.kenny)
'''

#hands bigger than 5
[[patches]]
[patches.pattern]
target = 'functions/button_callbacks.lua'
pattern = 'if #G.hand.highlighted <= 0 or G.GAME.blind.block_play or #G.hand.highlighted > 5 then'
position = 'at'
payload = 'if #G.hand.highlighted <= 0 or G.GAME.blind.block_play or #G.hand.highlighted > G.hand.config.highlighted_limit then'
match_indent = true
times = 1

#load anim
[[patches]]
[patches.pattern]
target = "game.lua"
pattern = "SC = Card(G.ROOM.T.w/2 - SC_scale*G.CARD_W/2, 10. + G.ROOM.T.h/2 - SC_scale*G.CARD_H/2, SC_scale*G.CARD_W, SC_scale*G.CARD_H, G.P_CARDS.empty, G.P_CENTERS['j_joker'])"
position = "after"
payload = '''
	SC = Card(G.ROOM.T.w/2 - SC_scale*G.CARD_W/2, 10. + G.ROOM.T.h/2 - SC_scale*G.CARD_H/2, SC_scale*G.CARD_W, SC_scale*G.CARD_H, G.P_CARDS.empty, G.P_CENTERS['j_jjok_tgojo'],{bypass_discovery_center = true, bypass_discovery_ui = true})
'''
match_indent = true

#splash card
[[patches]]
[patches.pattern]
target = 'game.lua'
pattern = "local replace_card = Card(self.title_top.T.x, self.title_top.T.y, 1.2*G.CARD_W*SC_scale, 1.2*G.CARD_H*SC_scale, G.P_CARDS.S_A, G.P_CENTERS.c_base)"
position = 'at'
match_indent = true
payload = '''
local replace_card = Card(self.title_top.T.x, self.title_top.T.y, 1.2*G.CARD_W*SC_scale, 1.2*G.CARD_H*SC_scale, G.P_CENTERS.j_jjok_tgojo, G.P_CENTERS.c_base)
'''

#takako
[[patches]]
[patches.pattern]
target = 'card.lua'
pattern = "if self.seal == 'Blue' and #G.consumeables.cards + G.GAME.consumeable_buffer < G.consumeables.config.card_limit and not self.ability.extra_enhancement then"
position = 'before'
match_indent = true
payload = '''
local _found = false
for i,v in ipairs(G.jokers.cards) do
	if v.config.center.key == 'j_jjok_takako' then
		_found = i
	end
end
if _found ~= false and self.seal == 'Blue' then
				local _planet = nil
					for k, v in pairs(G.P_CENTER_POOLS.Planet) do
                        if v.config.hand_type == G.GAME.last_hand_played then
                            _planet = v.key
                        end
                    end
	G.jokers.cards[_found]:juice_up()
	for i = 1, 3 do
		SMODS.add_card({set = 'Planet', area = G.consumeables, key = _planet, edition = 'e_negative'})
	end
	self:juice_up()
        return {
            message = '+3 Planets!', colour = G.C.SECONDARY_SET.Planet
        }
else
'''

[[patches]]
[patches.pattern]
target = 'card.lua'
pattern = '''
ret.effect = true
end
'''
position = 'after'
match_indent = false
payload = '''
end
'''

#ctools tracking
[[patches]]
[patches.pattern]
target = 'functions/misc_functions.lua'
pattern = "elseif card.config.center.set == 'Spectral' then  G.GAME.consumeable_usage_total.spectral = G.GAME.consumeable_usage_total.spectral + 1"
position = 'after'
match_indent = true
payload = '''
elseif card.config.center.set == 'ctools' then  G.GAME.consumeable_usage_total.ctools = G.GAME.consumeable_usage_total.ctools + 1
'''

[[patches]]
[patches.pattern]
target = 'functions/misc_functions.lua'
pattern = "G.GAME.consumeable_usage_total = G.GAME.consumeable_usage_total or {tarot = 0, planet = 0, spectral = 0, tarot_planet = 0, all = 0}"
position = 'at'
match_indent = true
payload = '''
G.GAME.consumeable_usage_total = G.GAME.consumeable_usage_total or {tarot = 0, planet = 0, spectral = 0, ctools = 0, tarot_planet = 0, all = 0}
'''

#outer swirl main menu
[[patches]]
[patches.pattern]
target = "game.lua"
pattern = "{name = 'colour_1', ref_table = G.C, ref_value = 'RED'},"
position = "at"
payload = "{name = 'colour_1', ref_table = G.C.SPLASH, ref_value = 1},"
match_indent = true

#inner swirl main menu
[[patches]]
[patches.pattern]
target = "game.lua"
pattern = "{name = 'colour_2', ref_table = G.C, ref_value = 'BLUE'},"
position = "at"
payload = "{name = 'colour_2', ref_table = G.C.SPLASH, ref_value = 2},"
match_indent = true