[manifest]
version = "0.1.0"
dump_lua = true
priority = 0

#ce and card select multibox
[[patches]]
[patches.pattern]
target = 'card.lua'
pattern = '''
return generate_card_ui(self.config.center, nil, loc_vars, card_type, badges, hide_desc, main_start, main_end, self)
'''
position = "at"
payload = '''
local full_UI_table = generate_card_ui(self.config.center, nil, loc_vars, card_type, badges, hide_desc, main_start,
        main_end, self)
    if self and self.ce_cost then
        full_UI_table.multi_box = full_UI_table.multi_box or {}
        local mb = #full_UI_table.multi_box
        full_UI_table.main.main_box_flag = true
        local k = G.localization.descriptions['Other']['jjok_ce_cost']
        for i, box in ipairs(k.text_parsed) do
            for j, line in ipairs(box) do
                local o = SMODS.localize_box(line, { scale = 1, vars = { tostring(self.ce_cost) } })
                full_UI_table.multi_box[mb + 1] = full_UI_table.multi_box[mb + 1] or {}
                full_UI_table.multi_box[mb + 1][#full_UI_table.multi_box[mb + 1] + 1] = o
            end
        end
    end
    if self and self.slots ~= 1 and Jjok.config.slotsystem then
        full_UI_table.multi_box = full_UI_table.multi_box or {}
        local mb = #full_UI_table.multi_box
        full_UI_table.main.main_box_flag = true
        local k = G.localization.descriptions['Other']['jjok_slots']
        for i, box in ipairs(k.text_parsed) do
            for j, line in ipairs(box) do
                local o = SMODS.localize_box(line, { scale = 1, vars = { tostring(self.slots) } })
                full_UI_table.multi_box[mb + 1] = full_UI_table.multi_box[mb + 1] or {}
                full_UI_table.multi_box[mb + 1][#full_UI_table.multi_box[mb + 1] + 1] = o
            end
        end
    end
    if self and self.inc_select ~= 0 then
        full_UI_table.multi_box = full_UI_table.multi_box or {}
        local mb = #full_UI_table.multi_box
        full_UI_table.main.main_box_flag = true
        local k = G.localization.descriptions['Other']['jjok_inc_select']
        for i, box in ipairs(k.text_parsed) do
            for j, line in ipairs(box) do
                local o = SMODS.localize_box(line, { scale = 1, vars = { tostring(self.inc_select) } })
                full_UI_table.multi_box[mb + 1] = full_UI_table.multi_box[mb + 1] or {}
                full_UI_table.multi_box[mb + 1][#full_UI_table.multi_box[mb + 1] + 1] = o
            end
        end
    end
    return full_UI_table
'''
match_indent = true